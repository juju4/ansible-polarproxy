---
# https://www.netresec.com/?page=PolarProxy

- name: Add polarproxy user
  ansible.builtin.user:
    name: "{{ polarproxy_user }}"
    comment: PolarProxy service
    system: true
    home: "{{ polarproxy_home }}"

- name: Ensure few directories exists
  ansible.builtin.file:
    dest: "{{ item.d }}"
    owner: "{{ item.o | default(polarproxy_user) }}"
    group: "{{ item.g | default('root') }}"
    mode: "{{ item.m | default('0755') }}"
    state: directory
  with_items: "{{ polarproxy_dirs }}"

- name: Fetch PolarProxy hash
  ansible.builtin.uri:
    url: 'https://www.netresec.com/?download=PolarProxy&hash=sha256'
    return_content: yes
  register: hash
  changed_when: false
  until: hash is success

- name: Set hash
  ansible.builtin.set_fact:
    polarproxy_hash: "sha256:{{ hash.content }}"
  when: curl_hash.stdout is defined and (polarproxy_hash is not defined or not polarproxy_hash)

- name: Fetch PolarProxy archive
  ansible.builtin.get_url:
    url: "{{ polarproxy_url }}"
    dest: "{{ polarproxy_home }}/polarproxy.tar.gz"
    mode: '0600'
    owner: "{{ polarproxy_user }}"
    checksum: "{{ polarproxy_hash | default(omit) }}"
  register: dl_result
  until: dl_result is success

- name: Unarchive PolarProxy
  ansible.builtin.unarchive:
    src: "{{ polarproxy_home }}/polarproxy.tar.gz"
    dest: "{{ polarproxy_home }}/PolarProxy"
    # FIXME! need mode preserve archive or at least file+dirs
    mode: '0755'
    remote_src: true
  become: true
  become_user: "{{ polarproxy_user }}"

- name: Ensure PolarProxy systemd service is configured
  ansible.builtin.template:
    src: PolarProxy.service.j2
    dest: /etc/systemd/system/PolarProxy.service
    mode: '0644'
  notify:
    - Reload systemd

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Ensure PolarProxy is enabled and started
  ansible.builtin.service:
    name: PolarProxy
    enabled: true
    state: started
  when:
    - not is_container|bool

- name: Docker | start polarproxy
  ansible.builtin.shell: >
    {{ polarproxy_home }}/PolarProxy/PolarProxy -v -p 10443,80,443 \
      -x /var/log/PolarProxy/polarproxy.cer -f /var/log/PolarProxy/proxyflows.log \
      -o /var/log/PolarProxy/ --certhttp 10080 --insecure &
  args:
    creates: /var/log/PolarProxy/polarproxy.cer
  become: true
  become_user: "{{ polarproxy_user }}"
  when:
    - is_container|bool
